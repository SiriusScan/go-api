// File: vulnerability.go
package models

import (
	"github.com/SiriusScan/go-api/sirius"
	"gorm.io/gorm"
)

type Vulnerability struct {
	gorm.Model
	VID string `gorm:"column:v_id"`
	// Description []Description `gorm:"foreignKey:VulnerabilityID"`
	Description         string
	Title               string
	Hosts               []Host              `gorm:"many2many:host_vulnerabilities"`
	HostVulnerabilities []HostVulnerability `gorm:"foreignKey:VulnerabilityID"`
	RiskScore           float64
	// RiskScore   RiskScore `gorm:"embedded"`
}

type RiskScore struct {
	CVSSV3ID uint
	CVSSV3   BaseMetricV3 `gorm:"embedded;embeddedPrefix:cvssv3_"`
	CVSSV2ID uint
	CVSSV2   BaseMetricV2 `gorm:"embedded;embeddedPrefix:cvssv2_"`
}

type BaseMetricV3 struct {
	ID                  uint          `gorm:"primaryKey"`
	CVSSV3              sirius.CVSSV3 `json:"cvssV3" gorm:"embedded"`
	ExploitabilityScore float64       `json:"exploitabilityScore"`
	ImpactScore         float64       `json:"impactScore"`
}

type CVSSV3 struct {
	Version                       string  `json:"version"`
	VectorString                  string  `json:"vectorString"`
	AttackVector                  string  `json:"attackVector"`
	AttackComplexity              string  `json:"attackComplexity"`
	PrivilegesRequired            string  `json:"privilegesRequired"`
	UserInteraction               string  `json:"userInteraction"`
	Scope                         string  `json:"scope"`
	ConfidentialityImpact         string  `json:"confidentialityImpact"`
	IntegrityImpact               string  `json:"integrityImpact"`
	AvailabilityImpact            string  `json:"availabilityImpact"`
	BaseScore                     float64 `json:"baseScore"`
	BaseSeverity                  string  `json:"baseSeverity"`
	ExploitCodeMaturity           string  `json:"exploitCodeMaturity"`
	RemediationLevel              string  `json:"remediationLevel"`
	ReportConfidence              string  `json:"reportConfidence"`
	TemporalScore                 float64 `json:"temporalScore"`
	TemporalSeverity              string  `json:"temporalSeverity"`
	ConfidentialityRequirement    string  `json:"confidentialityRequirement"`
	IntegrityRequirement          string  `json:"integrityRequirement"`
	AvailabilityRequirement       string  `json:"availabilityRequirement"`
	ModifiedAttackVector          string  `json:"modifiedAttackVector"`
	ModifiedAttackComplexity      string  `json:"modifiedAttackComplexity"`
	ModifiedPrivilegesRequired    string  `json:"modifiedPrivilegesRequired"`
	ModifiedUserInteraction       string  `json:"modifiedUserInteraction"`
	ModifiedScope                 string  `json:"modifiedScope"`
	ModifiedConfidentialityImpact string  `json:"modifiedConfidentialityImpact"`
	ModifiedIntegrityImpact       string  `json:"modifiedIntegrityImpact"`
	ModifiedAvailabilityImpact    string  `json:"modifiedAvailabilityImpact"`
	EnvironmentalScore            float64 `json:"environmentalScore"`
	EnvironmentalSeverity         string  `json:"environmentalSeverity"`
}

type BaseMetricV2 struct {
	ID                      uint          `gorm:"primaryKey"`
	CVSSV2                  sirius.CVSSV2 `json:"cvssV2" gorm:"embedded"`
	Severity                string        `json:"severity"`
	ExploitabilityScore     float64       `json:"exploitabilityScore"`
	ImpactScore             float64       `json:"impactScore"`
	AcInsufInfo             bool          `json:"acInsufInfo"`
	ObtainAllPrivilege      bool          `json:"obtainAllPrivilege"`
	ObtainUserPrivilege     bool          `json:"obtainUserPrivilege"`
	ObtainOtherPrivilege    bool          `json:"obtainOtherPrivilege"`
	UserInteractionRequired bool          `json:"userInteractionRequired"`
}

type CVSSV2 struct {
	Version                    string  `json:"version"`
	VectorString               string  `json:"vectorString"`
	AccessVector               string  `json:"accessVector"`
	AccessComplexity           string  `json:"accessComplexity"`
	Authentication             string  `json:"authentication"`
	ConfidentialityImpact      string  `json:"confidentialityImpact"`
	IntegrityImpact            string  `json:"integrityImpact"`
	AvailabilityImpact         string  `json:"availabilityImpact"`
	BaseScore                  float64 `json:"baseScore"`
	Exploitability             string  `json:"exploitability"`
	RemediationLevel           string  `json:"remediationLevel"`
	ReportConfidence           string  `json:"reportConfidence"`
	TemporalScore              float64 `json:"temporalScore"`
	CollateralDamagePotential  string  `json:"collateralDamagePotential"`
	TargetDistribution         string  `json:"targetDistribution"`
	ConfidentialityRequirement string  `json:"confidentialityRequirement"`
	IntegrityRequirement       string  `json:"integrityRequirement"`
	AvailabilityRequirement    string  `json:"availabilityRequirement"`
	EnvironmentalScore         float64 `json:"environmentalScore"`
}

// ================== Legacy ==================

type CVEData struct {
	gorm.Model
	CVEDataType         string
	CVEDataFormat       string
	CVEDataVersion      string
	CVEDataNumberOfCVEs string
	CVEDataTimestamp    string
	CVEItems            []*CVEItem `gorm:"foreignKey:CVEDataID"`
}

type CVEItem struct {
	gorm.Model
	CVEDataType      string
	CVEDataFormat    string
	DataVersion      string
	DataMeta         CVEDataMeta
	ProblemType      ProblemType
	References       []*Reference   `gorm:"foreignKey:CVEItemID"`
	Descriptions     []*Description `gorm:"foreignKey:CVEItemID"`
	Configurations   Configurations
	Impact           Impact
	PublishedDate    string
	LastModifiedDate string
	CVEDataID        uint
}

type CVEDataMeta struct {
	gorm.Model
	CVEIdentifier string `gorm:"uniqueIndex"` // Renamed from ID to avoid conflict with gorm.Model.ID
	Assigner      string
	CVEItemID     uint // Foreign key to link back to CVEItem
}

type ProblemType struct {
	gorm.Model
	ProblemTypeData []*ProblemTypeData `gorm:"foreignKey:ProblemTypeID"`
	CVEItemID       uint
}

type ProblemTypeData struct {
	gorm.Model
	ProblemTypeID uint
	Descriptions  []*Description `gorm:"foreignKey:ProblemTypeDataID"`
}

type Description struct {
	gorm.Model
	Lang              string
	Value             string
	ProblemTypeDataID uint
	CVEItemID         uint
	VulnerabilityID   uint
}

type Reference struct {
	gorm.Model
	URL       string
	Name      string
	RefSource string
	CVEItemID uint
}

type Configurations struct {
	gorm.Model
	Nodes     []*Node `gorm:"foreignKey:ConfigurationID"`
	CVEItemID uint
}

type Node struct {
	gorm.Model
	Operator        string
	CpeMatch        []*CpeMatch `gorm:"foreignKey:NodeID"`
	ConfigurationID uint
}

type CpeMatch struct {
	gorm.Model
	Vulnerable bool
	Cpe23Uri   string
	NodeID     uint
}

type Impact struct {
	gorm.Model
	BaseMetricV2 BaseMetricV2 `gorm:"embedded"`
	CVEItemID    uint
}
